Release 2:

1.

sqlite> SELECT * FROM food;

1|bananas|true|1
2|milk|true|4
3|eggs|false|3
4|mango|true|1
5|kale|false|2

2.

UPDATE food SET like="true" WHERE name="kale";

[no ouput]

3.

sqlite> SELECT * FROM food, types WHERE food.type_id = types.id;

1|bananas|true|1|1|fruit
2|milk|true|4|4|dairy
3|eggs|false|3|3|protein
4|mango|true|1|1|fruit
5|kale|true|2|2|vegetables

4.

sqlite> SELECT food.name, types.name, food.like FROM food JOIN types ON food.type_id = types.id;

bananas|fruit|true
milk|dairy|true
eggs|protein|false
mango|fruit|true
kale|vegetables|true


5.

sqlite> DELETE FROM food WHERE like="false";

[no output so check using command below]

sqlite> SELECT food.name, types.name, food.like FROM food JOIN types ON food.type_id = types.id;

bananas|fruit|true
milk|dairy|true
mango|fruit|true
kale|vegetables|true


Release 3:

1. There are many types of SQL joins including INNER JOIN, 
(LEFT, RIGHT, or FULL) OUTER JOIN, NATURAL JOIN, CROSS JOIN, and SELF JOIN. 
Not all of them are available for SQLite however. The main SQLite joins are
INNER JOIN and LEFT OUTER JOIN and you can apply different conditions to them. 

https://stackoverflow.com/questions/17946221/sql-join-and-different-types-of-joins/20298671#20298671
The link above has some pretty good diagrams for different types of joins

2.

To test, I added a row without all the columns:
sqlite> INSERT INTO food (name, like) VALUES ("honey","true");

sqlite> SELECT food.name, food.like, types.name FROM food JOIN types ON food.type_id=types.id;
bananas|true|fruit
milk|true|dairy
mango|true|fruit
kale|true|vegetables

sqlite> SELECT food.name, food.like, types.name FROM food LEFT OUTER JOIN types ON food.type_id=types.id;
bananas|true|fruit
milk|true|dairy
mango|true|fruit
kale|true|vegetables
honey|true|


